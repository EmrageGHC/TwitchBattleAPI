plugins {
            id 'java'
            id("xyz.jpenilla.run-paper") version "2.3.1"
            id 'maven-publish'

        }

        group = 'org.emrage'
        version = '1.0.0'

        repositories {
            mavenCentral()
            maven {
                name = "papermc-repo"
                url = "https://repo.papermc.io/repository/maven-public/"
            }
            // Sonatype Snapshots Repository für aktuelle Adventure-Snapshots
            maven {
                name = "sonatype-snapshots"
                url = "https://oss.sonatype.org/content/repositories/snapshots/"
            }
        }

        dependencies {
            compileOnly("io.papermc.paper:paper-api:1.21.8-R0.1-SNAPSHOT")

            // Adventure API Abhängigkeiten
            implementation("net.kyori:adventure-api:4.14.0")
            implementation("net.kyori:adventure-text-minimessage:4.14.0")
            implementation("net.kyori:adventure-platform-bukkit:4.3.1")
            implementation 'org.mongodb:mongodb-driver-sync:4.10.2'  // MongoDB-Treiber
        }
        java {
            withSourcesJar()
            withJavadocJar()
        }
        publishing {
            publications {
                maven(MavenPublication) {
                    from components.java
                }
            }
        }

        tasks {
            runServer {
                minecraftVersion("1.21.8")
            }
        }

        def targetJavaVersion = 21
        java {
            def javaVersion = JavaVersion.toVersion(targetJavaVersion)
            sourceCompatibility = javaVersion
            targetCompatibility = javaVersion
            if (JavaVersion.current() < javaVersion) {
                toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
            }
        }

        tasks.withType(JavaCompile).configureEach {
            options.encoding = 'UTF-8'

            if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
                options.release.set(targetJavaVersion)
            }
        }

        processResources {
            def props = [version: version]
            inputs.properties props
            filteringCharset 'UTF-8'
            filesMatching('plugin.yml') {
                expand props
            }
        }